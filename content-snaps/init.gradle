// init script to publish runtime dependencies

def copyDependency(Project project, ResolvedArtifact dep) {
    String cache = gradle.gradleUserHomeDir.getAbsolutePath() + "/caches/modules-2/files-2.1/"
    String destination = project.property("deploymentRepository")
    def id = dep.moduleVersion.id
    def artifactDir = new File(destination + "/" + id.group.replace(".", "/") + "/" + id.name  + "/" + id.version)
    artifactDir.mkdirs()
    File sourceDir = new File(cache + "/" + id.group + "/" + id.name + "/" + id.version)
    fileTree(sourceDir).each { File hash ->
        def hashName = String.format("%40s", hash.getName()).replace(" ", "0");
        fileTree(hash).each { content ->
            def destArtifact = new File(artifactDir.absolutePath, content.name)
            copy {
                from content
                into destArtifact
            }
            def hashFile = file(artifactDir.absolutePath + "/" + content.name + ".sha1")
            hashFile.text = hashName
        }
    }
}

allprojects {
    afterEvaluate {  project ->
        if (configurations.findByName("runtimeClasspath")) {
            configurations.runtimeClasspath.resolvedConfiguration.resolvedArtifacts.each { dep ->
                copyDependency(project, dep)
            }
        }
    }
}
